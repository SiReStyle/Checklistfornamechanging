// App.jsx
import React, { useState, useEffect } from 'react';
import confetti from 'canvas-confetti';

const defaultChecklist = [
  { title: "Ausweis und Reisepass", description: "Neue Dokumente beim BÃ¼rgerbÃ¼ro beantragen: alter Ausweis, Passfoto, Nachweis mitbringen.", subtasks: ["BÃ¼rgerbÃ¼ro-Termin buchen"] },
  { title: "FÃ¼hrerschein und Fahrzeugpapiere", description: "FÃ¼hrerschein & Fahrzeugbrief/-schein bei der Zulassungsstelle umschreiben lassen.", subtasks: ["Zulassungsstelle Termin buchen"] },
  { title: "Versicherungen", description: "Alle Versicherungen informieren.", subtasks: ["Krankenkasse", "KFZ-Versicherung", "Haftpflichtversicherung", "Lebensversicherung", "Rentenversicherung"] },
  { title: "Banken und Finanzen", description: "Bank, Kreditkarten, PayPal, Amazon, DauerauftrÃ¤ge etc. aktualisieren.", subtasks: ["Hausbank", "Kreditkartenanbieter", "Online-Dienste (z.â€¯B. PayPal)"] },
  { title: "VertrÃ¤ge und Mitgliedschaften", description: "Handy, Strom, Internet, Streamingdienste und Mitgliedschaften anpassen.", subtasks: ["Mobilfunkanbieter", "Stromanbieter", "Streamingdienste"] },
  { title: "Post und BehÃ¶rden", description: "Finanzamt, GEZ informieren (oft automatisch mit AusweisÃ¤nderung).", subtasks: ["Finanzamt", "Rundfunkbeitrag"] },
  { title: "Berufliches und Soziales", description: "Arbeitgeber, Rentenkonto, Berufskammern informieren.", subtasks: ["Arbeitgeber", "Berufskammer"] },
  { title: "Digitales Leben", description: "E-Mail-Adressen, Social Media, Kundenkonten (z.â€¯B. Zalando, eBay) anpassen.", subtasks: ["E-Mail-Adressen", "Online-Shops", "Soziale Netzwerke"] },
  { title: "FÃ¼r deinen Hund Pepper", description: "NamensÃ¤nderung bei Stadt (Hundesteuer), Tierarzt, Versicherung mitteilen.", subtasks: ["Stadtverwaltung", "Tierarzt", "Versicherung"] },
  { title: "Tipp: Dokumentenmappe anlegen", description: "Heiratsurkunde, Ausweise, Liste aller Stellen als Mappe vorbereiten.", subtasks: [] }
];

export default function NamensCheckliste() {
  const storedCustom = localStorage.getItem("custom_checklist");
  const [checklistItems, setChecklistItems] = useState(() => {
    const stored = localStorage.getItem("custom_checklist");
    return stored ? JSON.parse(stored) : defaultChecklist;
  });
  const [checked, setChecked] = useState(() => {
    const saved = localStorage.getItem("checked_state");
    return saved ? JSON.parse(saved) : checklistItems.map(item => item.subtasks.map(() => false));
  });
  const [termine, setTermine] = useState(() => {
    const saved = localStorage.getItem("termine_state");
    return saved ? JSON.parse(saved) : {};
  });
  const [notizen, setNotizen] = useState(() => {
    const saved = localStorage.getItem("notizen_state");
    return saved ? JSON.parse(saved) : checklistItems.map(() => []);
  });

  useEffect(() => {
    if ('Notification' in window && Notification.permission !== 'granted') {
      Notification.requestPermission();
    }

    const now = new Date();
    Object.entries(termine).forEach(([key, value]) => {
      const match = value.match(/(\d{2})\.(\d{2})\.(\d{4})\s+(\d{2}):(\d{2})/);
      if (match) {
        const [, day, month, year, hour, minute] = match;
        const reminderTime = new Date(`${year}-${month}-${day}T${hour}:${minute}:00`);
        const delay = reminderTime.getTime() - now.getTime();
        if (delay > 0) {
          setTimeout(() => {
            new Notification('ðŸ“Œ Termin-Erinnerung', { body: `Erinnerung: ${key} ist jetzt!`, icon: 'https://cdn-icons-png.flaticon.com/512/847/847969.png' });
          }, delay);
        }
      }
    });
  }, [termine]);
}
